package main

import (
	"bytes"
	"datalab/util"
	"flag"
	"fmt"
	"html/template"
	"log"
	"os"

	"github.com/gobuffalo/packr/v2"
)

var version = flag.Bool("version", false, "Just print the version and exit")
var quiet = flag.Bool("quiet", false, "Tone down the output noise")

var tmpl *template.Template

func init() {
	box := packr.New("root", "./templates")
	receiptTemplate, err := box.FindString("receipt_template")
	if err != nil {
		log.Fatal(err)
	}

	tmpl = template.Must(template.New("receipt_template").Parse(receiptTemplate))
}

func main() {
	flag.Parse()

	if *version {
		log.Println(currentVersion)
		os.Exit(0)
	}

	receipts := []Receipt{}

	receipt := Receipt{}

	colMap := map[string]map[string]bool{}

	if err := util.ReadSource(os.Stdin, func(line map[string]string, cols []string, lineNumber int) error {
		receipt.Headers = cols

		for col, val := range line {
			receipt.TotalRows++
			if _, ok := colMap[col]; !ok {
				colMap[col] = map[string]bool{}
			}
			colMap[col][val] = true
		}

		return nil
	}); err != nil {
		log.Fatal(err)
	}

	receipt.UniqueValues = map[string]int{}

	for col, vals := range colMap {
		receipt.UniqueValues[col] = len(vals)
	}

	receipts = append(receipts, receipt)

	var b bytes.Buffer
	if err := tmpl.Execute(&b, receipts); err != nil {
		log.Fatal(err)
	}

	fmt.Println(b.String())

	logDone()
}

type Receipt struct {
	TotalRows    int            `json:"total_rows"`
	Headers      []string       `json:"headers"`
	UniqueValues map[string]int `json:"unique_values"`
}

func logDone() {
	if *quiet {
		return
	}
	log.Println(`
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(&@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#,,,,@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&/,,,,,,,,@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/,,,,,,,,,,,,,,,,*@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,#@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,,,,,,,,/@@%,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@,,,,,,,,,,%@@@@@@@,,@@@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@@@/,,,,,,,,,,,,,,@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@#,,,,,,,,,@@@*,,,,*,(@@%,#@@@@,,,*@@@@@@&,,,@@@,*@@@@&,,,,,,,,,,,*@@/@@%,,,,,,,,,,,,,/@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@*,,,,,,,,*@@@@#,,,,,@@@%@@&@@@,*@@@*,,@@@(,(@@#@@//@@@,,,,,,,,,,#@@**@@&,,,,,,,,,,,,,%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@,,,,,,,,,,,#@@@@#,,#@@@@,,@@@%,@@@*,,,@@@*,@@@@#,,(@@#,,,,,,,,,#@@*,/@@@,,,,,,,,,,,,,@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,(@@@,,@@@%,,*@@@,%@@@,,,/@@@,#@@@,,,(@@&,,,,,,,,,@@@@@@@@@@,,,,,,,,,,,,,@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@&,,,,,,,(@@%#&@@@*,/@@&,,,&@@%,/@@@#(@@@(,,@@@//#@@@/,,,,,,,,*@@@,,,,*@@@,,,,,,,,,,,,/@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@(,,,,,,,,/#%%(*,,,,///,,,,///,,,,*#%#/,,,,%@@%%*,,,,,,,,,,,///,,,,,,///,,,,,,,,,,,,,,%@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@*,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@@*,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,/@@#,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@&,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,/@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@/,,,,,,*******,,,,,,,,,,,,,,,,,,,,,,,,,,,(@@%,,,,,,,,,,,,,,,,,,*@@@,,,,,,,,,,,,,,,,,,&@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@*,,,,,,@@@@@@@@@@,,,,,,,**,,,,,,,,,,**,,,@@@,,,,,,,,,,,,,**,,,,&@@/,,,,,,,,,,,,,,,,,,@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@,,,,,,%@@&,,,,#@@@,,/@@@@@@@&,,*@@@@@@@,#@@#,,/@@@/,,&@@&@@@%%@@@@@@@@,,,,,,,,,,,,,,,@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@&,,,,,,@@@*,,,,/@@@,@@@(,,,@@@,#@@&,,,,,,@@@,#@@@*,,(@@(,,%@@*,&@@%,,,,,,,,,,,,,,,,,,*@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@/,,,,,/@@%,,,,,@@@*&@@%,,,#@@&(@@&,,,,,,/@@&@@@@,,,*@@@@@@&,,,,@@@,,,,,,,,,,,,,,,,,,,(@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@,,,,,,@@@,,,,(@@@*,@@@/,,*@@@,@@@&,,,,,,@@@,*@@@%,,%@@#,,,,,,,%@@#,,,,,,,,,,,,,,,,,#@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@,,,,,(@@@@@@@@@*,,,/@@@@@@@/,,/@@@@@@@,/@@%,,(@@@(,*@@@@@@@(,,%@@@@@@,,,,,,,,,,/@@#.@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,/@@@*...@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@%,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,*/%&@@@%*.....,@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@,.............................................................................%@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@..........................................................................,&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@...................................................................*#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`)
}
